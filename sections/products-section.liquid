{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [
    {
      "type": "header",
      "content": "Product Grid Settings"
    },
    {
      "type": "text",
      "label": "Title",
      "id": "section_title",
      "default": "Featured Products"
    },
    {
      "type": "checkbox",
      "label": "Enable Color Options",
      "id": "enable_color_options",
      "default": true
    },
    {
      "type": "checkbox",
      "label": "Enable Size Options",
      "id": "enable_size_options",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Default",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<!-- Product Grid: Displaying Images -->
<div class="product-grid">
  {% for product in collections.all.products %}
    <div class="product-item" data-product-id="{{ product.id }}">
      <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" class="product-image">
    </div>
  {% endfor %}
</div>

<!-- Modal for Product Details -->
<div id="productModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div id="modalData">
      <img id="modalImage" src="" alt="">
      <h2 id="modalTitle"></h2>
      <p id="modalDescription"></p>
      <p id="modalPrice"></p>
      <p>
        <label for="color">Color:</label>
        <select id="color"></select>
      </p>
      <p>
        <label for="size">Size:</label>
        <select id="size"></select>
      </p>
      <button id="addToCartBtn">Add to Cart</button>
    </div>
  </div>
</div>

<script>
  // Wait for DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Dynamically generated product data from Shopify Liquid
    const products = [
      {% for product in collections.all.products %}
        {
          id: "{{ product.id }}", // Make sure this is a string to match HTML data attribute
          title: "{{ product.title | escape }}",
          price: "{{ product.price | money }}",
          description: "{{ product.description | strip_html | escape | truncatewords: 20 }}",
          image: "{{ product.featured_image | img_url: 'medium' }}",
          options: [
            {% for option in product.options_with_values %}
              {
                name: "{{ option.name | escape }}",
                values: [
                  {% for value in option.values %}
                    "{{ value | escape }}"{% unless forloop.last %},{% endunless %}
                  {% endfor %}
                ]
              }{% unless forloop.last %},{% endunless %}
            {% endfor %}
          ]
        }{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ];

    // Function to open the modal and display product details
    function openModal(productId) {
      const product = products.find(function(p) {
        return p.id === productId.toString(); // Ensure we're comparing strings
      });

      if (!product) {
        console.error('Product not found:', productId);
        return;
      }

      const modal = document.getElementById('productModal');
      const modalImage = document.getElementById('modalImage');
      const modalTitle = document.getElementById('modalTitle');
      const modalDescription = document.getElementById('modalDescription');
      const modalPrice = document.getElementById('modalPrice');
      const colorSelect = document.getElementById('color');
      const sizeSelect = document.getElementById('size');

      modalImage.src = product.image;
      modalImage.alt = product.title;
      modalTitle.textContent = product.title;
      modalDescription.textContent = product.description;
      modalPrice.textContent = product.price;

      // Clear previous options
      colorSelect.innerHTML = '';
      sizeSelect.innerHTML = '';

      // Add default options
      const defaultColorOption = document.createElement('option');
      defaultColorOption.value = '';
      defaultColorOption.textContent = 'Select a color';
      colorSelect.appendChild(defaultColorOption);

      const defaultSizeOption = document.createElement('option');
      defaultSizeOption.value = '';
      defaultSizeOption.textContent = 'Select a size';
      sizeSelect.appendChild(defaultSizeOption);

      // Populate the options
      product.options.forEach(function(option) {
        if (option.name.toLowerCase() === "color") {
          option.values.forEach(function(value) {
            const optionElement = document.createElement('option');
            optionElement.value = value;
            optionElement.textContent = value;
            colorSelect.appendChild(optionElement);
          });
        } else if (option.name.toLowerCase() === "size") {
          option.values.forEach(function(value) {
            const optionElement = document.createElement('option');
            optionElement.value = value;
            optionElement.textContent = value;
            sizeSelect.appendChild(optionElement);
          });
        }
      });

      modal.style.display = 'block';
    }

    // Function to close the modal
    function closeModal() {
      document.getElementById('productModal').style.display = 'none';
    }

    // Add click event to all product items
    document.querySelectorAll('.product-item').forEach(function(item) {
      item.addEventListener('click', function() {
        const productId = this.getAttribute('data-product-id');
        openModal(productId);
      });
    });

    // Add event listener to close modal when clicking the 'X' button
    document.querySelector('.close').addEventListener('click', closeModal);

    // Close the modal when clicking outside of it
    window.addEventListener('click', function(event) {
      if (event.target === document.getElementById('productModal')) {
        closeModal();
      }
    });

    // Function to add the selected product to the cart
    document.getElementById('addToCartBtn').addEventListener('click', function() {
      const selectedColor = document.getElementById('color').value;
      const selectedSize = document.getElementById('size').value;
      const productTitle = document.getElementById('modalTitle').textContent;
      
      console.log(`Added ${productTitle} to cart with color ${selectedColor} and size ${selectedSize}`);
      // Add your cart logic here (e.g., Shopify AJAX API)
      
      // Close the modal after adding to cart
      closeModal();
    });
  });
</script>

<style>
 .product-grid {
    display: flex;
    flex-direction: row;
    gap: 20px;
    flex-wrap: wrap;
    justify-content: center;
}

  .product-item {
    text-align: center;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .product-item:hover {
    transform: scale(1.05);
  }

  .product-image {
    max-width: 100%;
    /* height: auto; */
    /* border-radius: 8px; */
    height: 444px;
    width: 433px;
    object-fit: cover;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
    border-radius: 8px;
    position: relative;
  }

  .close {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    position: absolute;
    top: 10px;
    right: 20px;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  #modalImage {
    max-width: 100%;
    height: auto;
    margin-bottom: 20px;
  }

  #color, #size {
    padding: 8px;
    margin-left: 10px;
    border-radius: 4px;
    border: 1px solid #ddd;
  }

  #addToCartBtn {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 20px;
  }

  #addToCartBtn:hover {
    background-color: #45a049;
  }
</style>