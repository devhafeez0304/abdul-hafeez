{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [
    {
      "type": "header",
      "content": "Product Grid Settings"
    },
    {
      "type": "text",
      "label": "Title",
      "id": "section_title",
      "default": "Featured Products"
    },
    {
      "type": "checkbox",
      "label": "Enable Color Options",
      "id": "enable_color_options",
      "default": true
    },
    {
      "type": "checkbox",
      "label": "Enable Size Options",
      "id": "enable_size_options",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Default",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for product in collections.all.products %}
    <div class="product-item" data-product-id="{{ product.id }}">
      <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
      <h3>{{ product.title }}</h3>
      <p>{{ product.description | truncatewords: 15 }}</p>
      <p>{{ product.price | money }}</p>
      
      <!-- Product Variants (Color and Size) -->
      <div class="product-options">
        <label for="color-{{ product.id }}">Color:</label>
        <select id="color-{{ product.id }}" class="color-options" data-product-id="{{ product.id }}">
          {% for variant in product.variants %}
            {% if variant.available %}
              <option value="{{ variant.id }}">{{ variant.title }}</option>
            {% endif %}
          {% endfor %}
        </select>
        
        <label for="size-{{ product.id }}">Size:</label>
        <select id="size-{{ product.id }}" class="size-options" data-product-id="{{ product.id }}">
          {% for variant in product.variants %}
            {% if variant.available %}
              <option value="{{ variant.id }}">{{ variant.option1 }}</option>
            {% endif %}
          {% endfor %}
        </select>
      </div>
      
      <button class="add-to-cart-btn" data-product-id="{{ product.id }}">Add to Cart</button>
    </div>
  {% endfor %}
</div>

<!-- Modal for Product Details (optional) -->
<div id="productModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div id="modalData">
      <img id="modalImage" src="" alt="">
      <h2 id="modalTitle"></h2>
      <p id="modalDescription"></p>
      <p id="modalPrice"></p>
      <p>
        <label for="color">Color:</label>
        <select id="color"></select>
      </p>
      <p>
        <label for="size">Size:</label>
        <select id="size"></select>
      </p>
      <button id="addToCartBtn">Add to Cart</button>
    </div>
  </div>
</div>

<script>
  // Function to add product to cart
  function addToCart(productId, color, size) {
    const data = {
      items: [{
        id: productId,
        quantity: 1,
        properties: {
          "Color": color,
          "Size": size
        }
      }]
    };

    fetch('/cart/add.js', {
      method: 'POST',
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => response.json())
    .then(data => {
      console.log('Product added to cart:', data);
      alert('Product added to cart!');
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }

  // Modal functionality
  function openModal(productId) {
    const product = products.find(p => p.id === productId);

    const modal = document.getElementById('productModal');
    const modalImage = document.getElementById('modalImage');
    const modalTitle = document.getElementById('modalTitle');
    const modalDescription = document.getElementById('modalDescription');
    const modalPrice = document.getElementById('modalPrice');
    const colorSelect = document.getElementById('color');
    const sizeSelect = document.getElementById('size');

    modalImage.src = product.image;
    modalTitle.textContent = product.title;
    modalDescription.textContent = product.description;
    modalPrice.textContent = `${(product.price / 100).toFixed(2)}â‚¬`;

    colorSelect.innerHTML = '';
    product.options[0].values.forEach(value => {
      const option = document.createElement('option');
      option.value = value;
      option.textContent = value;
      colorSelect.appendChild(option);
    });

    sizeSelect.innerHTML = '';
    product.options[1].values.forEach(value => {
      const option = document.createElement('option');
      option.value = value;
      option.textContent = value;
      sizeSelect.appendChild(option);
    });

    modal.style.display = 'block';
  }

  // Close modal functionality
  function closeModal() {
    const modal = document.getElementById('productModal');
    modal.style.display = 'none';
  }

  // Add event listeners for modal close button and background click
  document.querySelector('.close').addEventListener('click', closeModal);
  window.addEventListener('click', function(event) {
    if (event.target === document.getElementById('productModal')) {
      closeModal();
    }
  });

  // Add to cart button functionality
  document.querySelectorAll('.add-to-cart-btn').forEach(button => {
    button.addEventListener('click', function() {
      const productId = this.getAttribute('data-product-id');
      const color = document.querySelector(`#color-${productId}`).value;
      const size = document.querySelector(`#size-${productId}`).value;
      addToCart(productId, color, size);
    });
  });
</script>

<style>
  .product-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 16px;
  }

  .product-item {
    text-align: center;
    cursor: pointer;
  }

  .product-item img {
    max-width: 100%;
    height: auto;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
  }

  .close {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
    position: absolute;
    top: 0;
    right: 25px;
    font-family: Arial, sans-serif;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>
